  // Array to track the playing source nodes:
  var sources = [];
  // When starting the source, put it at the end of the array,
  // and set a handler to make sure it gets removed when the
  // AudioBufferSourceNode reaches its end.
  // First argument is the AudioBufferSourceNode to start, other arguments are
  // the argument to the |start()| method of the AudioBufferSourceNode.
  function startSource() {
    var src = arguments[0];
    var startArgs = Array.prototype.slice.call(arguments, 1);
    src.onended = function() {
      sources.splice(sources.indexOf(src), 1);
    }
    sources.push(src);
    src.start.apply(src, startArgs);
  }
  function activeSources() {
    return sources.length;
  }
  var src0 = context.createBufferSource();
  var src0 = context.createBufferSource();
  // Set buffers and other parameters...
  startSource(src0, 0);
  startSource(src1, 0);
  // Some time later, query the number of sources...
  console.log(activeSources());
