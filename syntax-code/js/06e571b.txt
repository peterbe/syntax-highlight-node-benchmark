async function getCompressedTextureIfAvailable(gl) {
  const texture = gl.createTexture();
  gl.bindTexture(gl.TEXTURE_2D, texture); // create texture object on GPU
  const ext = gl.getExtension('WEBGL_compressed_texture_s3tc'); // will be null if not supported
  if (ext) {
    // the file is already in the correct compressed format
    const dataArrayBuffer = await fetch('/textures/foobar512x512.RGBA_S3TC_DXT1')
      .then(response => response.arrayBuffer());
    gl.compressedTexImage2D(gl.TEXTURE_2D,
      0, // set the base image level
      ext.COMPRESSED_RGBA_S3TC_DXT1_EXT, // the compressed format we are using
      512, 512, // width, height of the image
      0, // border, always 0
      new DataView(dataArrayBuffer));
    gl.generateMipMap(); // create mipmap levels, like we would for a standard image
    return texture;
  }
}